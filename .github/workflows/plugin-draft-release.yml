name: Create plugin release draft

on:
  workflow_dispatch:
    inputs:
      plugin:
        description: 'The plugin name (e.g., flux)'
        required: true
        type: string
      version:
        description: 'The plugin version (e.g., 0.1.0)'
        required: true
        type: string

env:
  REGISTRY: ghcr.io
jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      packages: write # needed for publishing the container image
    steps:
      - name: Checkout cpde
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3.6.1

      - name: Log in to the Container registry
        uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc # v2.2.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Build plugin tarball
        id: build_tarball
        run: |
          PLUGIN="${{ github.event.inputs.plugin }}"
          cd $PLUGIN
          npm install
          npm run build
          OUTPUT=$(npx @kinvolk/headlamp-plugin package | tail -n2)
          TARBALL=$(echo "$OUTPUT" | head -n1 | sed -E 's/Created tarball: "([^"]+)".*/\1/')
          CHECKSUM=$(echo "$OUTPUT" | tail -n1 | sed -E 's/Tarball checksum \(sha256\): (.*)/\1/')
          echo "tarball_path=$TARBALL" >> $GITHUB_ENV
          echo "checksum=$CHECKSUM" >> $GITHUB_ENV

      - name: Check ArtifactHub pkg for in-cluster compatibility
        id: check_artifacthub
        run: |
          if grep -q "in-cluster" "${{ github.event.inputs.plugin }}/artifacthub-pkg.yml"; then
            echo "::set-output name=incluster::true"
          else
            echo "::set-output name=incluster::false"
          fi

      - name: Build and push Docker image
        uses: docker/build-push-action@0a97817b6ade9f46837855d676c4cca3a2471fc9 # v4.2.1
        env:
          PLUGIN: ${{ github.event.inputs.plugin }}
          VERSION: ${{ github.event.inputs.version }}
          REGISTRY: ${{ env.REGISTRY }}
          IMAGE_NAME: headlamp-plugin-${{ github.event.inputs.plugin }}
        with:
          context: .
          push: true
          pull: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ env.REGISTRY }}/joaquim-rocha/${{ env.IMAGE_NAME }}:${{ env.VERSION }},${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.licenses=Apache-2.0
          provenance: true
          build-args: PLUGIN=${{ github.event.inputs.plugin }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Create release draft and push tarball
        uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844 # v1
        with:
          draft: true
          token: ${{ secrets.GITHUB_TOKEN }}
          name: "${{ github.event.inputs.plugin }} ${{ github.event.inputs.version }}"
          body: Draft release for ${{ github.event.inputs.plugin }} version ${{ github.event.inputs.version }}
          files: ${{ steps.build_tarball.outputs.tarball_path }}
        env:
          GITHUB_TOKEN: ${{ github.repository }}

      - name: Update ArtifactHub pkg file & file PR
        env:
          PLUGIN: ${{ github.event.inputs.plugin }}
          VERSION: ${{ github.event.inputs.version }}
          TAR_PATH: ${{ steps.build_tarball.outputs.tarball_path }}
          CHECKSUM: ${{ steps.build_tarball.outputs.checksum }}
        run: |
          PKG_FILE="${PLUGIN}/artifacthub-pkg.yml"
          TAR_URL="https://github.com/joaquim-rocha/hl-plugins/releases/download/${PLUGIN}-${VERSION}/$(basename $TAR_PATH)"
          sed -i "s|^\(headlamp/plugin/archive-url:\).*|\1 \"$TAR_URL\"|g" "$PKG_FILE"
          sed -i "s|^\(headlamp/plugin/archive-checksum:\).*|\1 \"SHA256:$CHECKSUM\"|g" "$PKG_FILE"

          echo "ArtifactHub pkg file updated. Please review the changes below and commit manually:"
          git diff "$PKG_FILE"

          echo "Creating PR to update ArtifactHub pkg file..."

          git config --global user.name "GitHub Action"
          git config --global user.email "
          git commit -m "$PLUGIN: Update ArtifactHub pkg file for $VERSION" "$PKG_FILE"
          git push origin HEAD:update-artifacthub-pkg-file
          gh pr create \
            --base main \
            --title "Update ArtifactHub pkg file for $PLUGIN $VERSION"
          echo "PR created successfully."
